{"version":3,"file":"static/webpack/static\\development\\pages\\calendar.js.af2a2a62bcd8157ee93c.hot-update.js","sources":["webpack:///./pages/calendar.js"],"sourcesContent":["import { Calendar, Badge } from 'antd';\r\n// import { Fragment } from 'react';\r\nimport { useState, useEffect, useReducer, useContext } from 'react'\r\nimport { withPageRouter } from '../components/withPageRouter'\r\n\r\nimport gql from 'nanographql'\r\n\r\n// const client = new GraphQLClient({\r\n//   url: 'https://api.github.com/graphql',\r\n\r\n// })\r\n\r\nconst ISSUES_QUERY = gql`\r\nquery ($name: String!, $owner: String!) { \r\n  repository(name: $name, owner: $owner){\r\n    issues(last:100){\r\n      edges{\r\n        node{\r\n          id\r\n          title\r\n          url\r\n          assignees (first:10){\r\n            edges {\r\n              node {\r\n                id\r\n                name\r\n                avatarUrl\r\n              }\r\n            }\r\n          }\r\n          author{\r\n            login\r\n            avatarUrl\r\n          }\r\n          milestone {\r\n            id\r\n            dueOn\r\n          }\r\n          state\r\n          labels(first:10) {\r\n            edges {\r\n              node {\r\n                id\r\n                color\r\n                name\r\n              }\r\n            }\r\n          }\r\n          projectCards{\r\n            nodes{\r\n              column{\r\n                name\r\n                createdAt\r\n              }\r\n            }\r\n            edges{\r\n              node {\r\n                id\r\n                note\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\n\r\nconst fetcher = async (auth) => {\r\n  const result = await fetch('https://api.github.com/graphql', {\r\n    method: \"POST\",\r\n    headers: { 'Authorization': \"token \" + auth },\r\n    body: ISSUES_QUERY({ name: \"embeds\", owner: \"loganpowell\" })\r\n  })\r\n \r\n  const prime = await result.json()\r\n  console.log(\"prime:\")\r\n  const { data: { repository: { issues: { edges }}} } = prime\r\n  console.log(prime)\r\n  \r\n  return edges.map(({ node }, idx) => {\r\n    const {\r\n      title,\r\n      url,\r\n      assignees: { edges: assignee_edges },\r\n      author: { login, avatarUrl: authorAvatar },\r\n      milestone: { dueOn },\r\n      state,\r\n      labels: { edges: label_edges },\r\n      projectCards: { \r\n        nodes: [{ column: { name: column_name }}], \r\n        edges: [{ node: { note: card_note, url: card_url}}] \r\n      }\r\n    } = node\r\n\r\n    return {\r\n      key: idx,\r\n      issue_title: title,\r\n      state,\r\n      dueOn,\r\n      issue_author: {user_id: login, authorAvatar},\r\n      issue_url: url,\r\n      assignees: assignee_edges.map(({ node: { name, avatarUrl }}) => ({ name, avatarUrl })),\r\n      labels: label_edges.map(({ node: { color, name }}) => ({ color, name })),\r\n      column_name,\r\n      card_info: { card_note, card_url }\r\n    }\r\n  }) \r\n}\r\n\r\n\r\nfunction getListData(data, value) {\r\n  // let listData;\r\n  let input = new Date(value).toISOString().split('T')[0]\r\n\r\n  // let fetchedDate = new Date(\"2019-06-28T00:00:00Z\").toISOString().split('T')[0]\r\n  let matches = data.filter((cur, idx) => new Date(cur.dueOn).toISOString().split('T')[0] = input)\r\n  return matches.map(({ state, issue_title }) => ({\r\n    type: state === \"OPEN\" ? 'success' : 'error',\r\n    content: issue_title\r\n  }))\r\n}\r\n\r\nconst calendarReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOAD': {\r\n      return {\r\n        auth: action.auth,\r\n        data: action.data,\r\n        loaded: true\r\n      }\r\n    }\r\n    case 'FILTER': {\r\n      console.log(\"FILTER FIRED: \")\r\n      if (state.loaded) {\r\n        return {\r\n          ...state,\r\n          data: getListData(state.data, action.date) \r\n        }\r\n      } else {\r\n        return {\r\n          data: []\r\n        }\r\n      }\r\n    }\r\n    default: return {\r\n      ...state\r\n    }\r\n  }\r\n} \r\n\r\n\r\nlet example_response = {\r\n  \"data\": {\r\n    \"repository\": {\r\n      \"issues\": {\r\n        \"edges\": [\r\n          {\r\n            \"node\": {\r\n              \"id\": \"MDU6SXNzdWU0NTgwNTc2Mjc=\",\r\n              \"title\": \"testing back-log\",\r\n              \"url\": \"https://github.com/loganpowell/embeds/issues/2\",\r\n              \"assignees\": {\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDQ6VXNlcjM0MDgxOTE=\",\r\n                      \"name\": \"Logan Powell\",\r\n                      \"avatarUrl\": \"https://avatars1.githubusercontent.com/u/3408191?v=4\"\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              \"author\": {\r\n                \"login\": \"loganpowell\",\r\n                \"avatarUrl\": \"https://avatars1.githubusercontent.com/u/3408191?v=4\"\r\n              },\r\n              \"milestone\": {\r\n                \"id\": \"MDk6TWlsZXN0b25lNDQyNDU2NA==\",\r\n                \"dueOn\": \"2019-06-28T00:00:00Z\"\r\n              },\r\n              \"state\": \"OPEN\",\r\n              \"labels\": {\r\n                \"edges\": []\r\n              },\r\n              \"projectCards\": {\r\n                \"nodes\": [\r\n                  {\r\n                    \"column\": {\r\n                      \"name\": \"back-log\",\r\n                      \"createdAt\": \"2019-06-19T14:44:59Z\"\r\n                    }\r\n                  }\r\n                ],\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDExOlByb2plY3RDYXJkMjI5NzM4MjY=\",\r\n                      \"note\": null,\r\n                      \"url\": \"https://github.com/loganpowell/embeds/projects/1#card-22973826\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"node\": {\r\n              \"id\": \"MDU6SXNzdWU0NTgwNTk4MDY=\",\r\n              \"title\": \"testing wip\",\r\n              \"url\": \"https://github.com/loganpowell/embeds/issues/3\",\r\n              \"assignees\": {\r\n                \"edges\": []\r\n              },\r\n              \"author\": {\r\n                \"login\": \"loganpowell\",\r\n                \"avatarUrl\": \"https://avatars1.githubusercontent.com/u/3408191?v=4\"\r\n              },\r\n              \"milestone\": {\r\n                \"id\": \"MDk6TWlsZXN0b25lNDQyNDU2NA==\",\r\n                \"dueOn\": \"2019-06-28T00:00:00Z\"\r\n              },\r\n              \"state\": \"OPEN\",\r\n              \"labels\": {\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDU6TGFiZWwxNDAzNTE5MzIw\",\r\n                      \"color\": \"d73a4a\",\r\n                      \"name\": \"bug\"\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              \"projectCards\": {\r\n                \"nodes\": [\r\n                  {\r\n                    \"column\": {\r\n                      \"name\": \"WIP\",\r\n                      \"createdAt\": \"2019-06-19T14:45:06Z\"\r\n                    }\r\n                  }\r\n                ],\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDExOlByb2plY3RDYXJkMjI5NzQwNDU=\",\r\n                      \"note\": null,\r\n                      \"url\": \"https://github.com/loganpowell/embeds/projects/1#card-22974045\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"node\": {\r\n              \"id\": \"MDU6SXNzdWU0NTgwNjAzNTQ=\",\r\n              \"title\": \"testing done\",\r\n              \"url\": \"https://github.com/loganpowell/embeds/issues/4\",\r\n              \"assignees\": {\r\n                \"edges\": []\r\n              },\r\n              \"author\": {\r\n                \"login\": \"loganpowell\",\r\n                \"avatarUrl\": \"https://avatars1.githubusercontent.com/u/3408191?v=4\"\r\n              },\r\n              \"milestone\": {\r\n                \"id\": \"MDk6TWlsZXN0b25lNDQyNDU2NA==\",\r\n                \"dueOn\": \"2019-06-28T00:00:00Z\"\r\n              },\r\n              \"state\": \"CLOSED\",\r\n              \"labels\": {\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDU6TGFiZWwxNDAzNTE5MzIz\",\r\n                      \"color\": \"a2eeef\",\r\n                      \"name\": \"enhancement\"\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              \"projectCards\": {\r\n                \"nodes\": [\r\n                  {\r\n                    \"column\": {\r\n                      \"name\": \"Done\",\r\n                      \"createdAt\": \"2019-06-19T14:45:11Z\"\r\n                    }\r\n                  }\r\n                ],\r\n                \"edges\": [\r\n                  {\r\n                    \"node\": {\r\n                      \"id\": \"MDExOlByb2plY3RDYXJkMjI5NzQxMTc=\",\r\n                      \"note\": null,\r\n                      \"url\": \"https://github.com/loganpowell/embeds/projects/1#card-22974117\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Context = React.createContext()\r\n\r\nconst DataCells = ({value}) => {\r\n  const { state, dispatch } = useContext(Context)\r\n  \r\n  if (!state) {\r\n    return <p>loading</p>\r\n  } else {\r\n    dispatch({\r\n      type: 'FILTER',\r\n      date: value\r\n    })\r\n    \r\n    console.log('issues: ' + state.issues)\r\n    \r\n    // console.log(\"state: \" + state )\r\n    return (\r\n      <ul className=\"events\">\r\n        {state.issues.map(item => (\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} className=\"ant-badge-status\" />\r\n          </li>\r\n        ))}\r\n        <style jsx>{`\r\n        .events {\r\n          list-style: none;\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n        .events .ant-badge-status {\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          width: 100%;\r\n          text-overflow: ellipsis;\r\n          font-size: 12px;\r\n        }\r\n        `}\r\n        </style>\r\n      </ul>\r\n    );\r\n  }\r\n  return null\r\n}\r\n\r\nconst dateCellRender = value => <DataCells value={value}/>\r\n\r\nfunction getMonthData(value) {\r\n  if (value.month() === 8) {\r\n    return 1394;\r\n  }\r\n}\r\n\r\nfunction monthCellRender(value) {\r\n  const num = getMonthData(value);\r\n  return num ? (\r\n    <div className=\"notes-month\">\r\n      <section>{num}</section>\r\n      <span>Backlog number</span>\r\n      <style jsx>{`\r\n      .notes-month {\r\n        text-align: center;\r\n        font-size: 28px;\r\n      }\r\n      .notes-month section {\r\n        font-size: 28px;\r\n      }\r\n      `}\r\n      </style>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n  auth: \"loading...\",\r\n  loaded: false,\r\n  data: []\r\n}\r\n\r\n\r\nconst Index = ({ router: { query: { auth } } }) => {\r\n  const [ state, dispatch ] = useReducer(calendarReducer, initialState)\r\n  useEffect(() => {\r\n    const fetchData = (auth) => fetcher(auth).then(res => {\r\n      dispatch({\r\n        type: 'LOAD',\r\n        data: res,\r\n        auth: auth\r\n      })\r\n      console.log(\"res: \" + JSON.stringify(res))\r\n    })\r\n    \r\n    fetchData(auth)\r\n  }, [])\r\n  \r\n\r\n  // console.log(\"DATA: \" + JSON.stringify(state))\r\n  return (\r\n    <Context.Provider value={{state, dispatch}}>\r\n      <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender}/>\r\n    </Context.Provider>\r\n  ) \r\n}\r\n\r\nexport default withPageRouter(Index)"],"mappings":"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","sourceRoot":""}